<UserControl x:Class="MusicPlayerDesign.Views.MusicListView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MusicPlayerDesign.Views"
      xmlns:viewmodels="clr-namespace:MusicPlayerDesign.ViewModels"
      xmlns:models="clr-namespace:MusicPlayerDesign.ViewModels"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="400"
      Background="{DynamicResource n1_1}">
    
    

    <UserControl.Resources>

        <!-- _____________________Transparent Button Style_____________________ -->
        <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        


        <!--_______________________Scrollbar Style_____________________ -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}" x:Name="ScrollBarThumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="0" 
                                Background="{DynamicResource n1_3}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="0" 
                                Width="20" 
                                Margin="0,0,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="5" 
                        CornerRadius="0" 
                        Background="Transparent"
                        Width="10"/>
                <Track x:Name="PART_Track" 
                       Grid.Row="1" 
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" 
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" 
                               Margin="1,0,1,0"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" 
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="600"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                       Value="{TemplateBinding VerticalOffset}" 
                                       Maximum="{TemplateBinding ScrollableHeight}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}" 
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="400*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="80*"/>
        </Grid.RowDefinitions>


        <ScrollViewer VerticalScrollBarVisibility="Visible"
                      Height="Auto"
                      Grid.Row="0"
                      Margin="10"
                      VerticalAlignment="Top">
            <ListBox Name="MusicList_LST" 
                     Background="Transparent"
                     BorderThickness="0"
                     Foreground="{DynamicResource n1_4}"
                     ScrollViewer.CanContentScroll="True"
                     VerticalAlignment="Top"
                     ItemsSource="{Binding Directories, Mode=TwoWay, IsAsync=True}"
                     IsSynchronizedWithCurrentItem="True">
                <ListBox.Resources>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" 
                                                        Value="#30475e" 
                                                        TargetName="Bd"/>
                                            <Setter Property="CornerRadius" 
                                                        Value="5" 
                                                        TargetName="Bd"/>
                                            <Setter TargetName="Bd"
                                                        Property="BorderBrush"
                                                        Value="#f2a365"/>
                                            <Setter TargetName="Bd"
                                                        Property="BorderThickness"
                                                        Value="0,0,0,3"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" 
                                                        Value="#30475e" 
                                                        TargetName="Bd"/>
                                            <Setter Property="CornerRadius" 
                                                        Value="5" 
                                                        TargetName="Bd"/>
                                            <Setter TargetName="Bd"
                                                        Property="BorderBrush"
                                                        Value="#f2a365"/>
                                            <Setter TargetName="Bd"
                                                        Property="BorderThickness"
                                                        Value="0,0,0,3"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">

                                            <Setter Property="Background" 
                                                        Value="#30475e" 
                                                        TargetName="Bd"/>
                                            <Setter Property="CornerRadius" 
                                                        Value="5" 
                                                        TargetName="Bd"/>
                                            <Setter TargetName="Bd"
                                                        Property="BorderBrush"
                                                        Value="#f2a365"/>
                                            <Setter TargetName="Bd"
                                                        Property="BorderThickness"
                                                        Value="0,0,0,3"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsFocused" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Margin" Value="10"></Setter>
                    </Style>
                </ListBox.Resources>
                <ListBox.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border>
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>

                            <Label Content="{Binding Title}"
                                       Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Foreground="#ececec"
                                       HorizontalContentAlignment="Left"
                                       VerticalContentAlignment="Center"
                                       IsHitTestVisible="False"
                                       FontSize="12"></Label>
                            <Label Content="{Binding Artist}"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Foreground="#ececec"
                                       HorizontalContentAlignment="Left"
                                       VerticalContentAlignment="Center"
                                       FontSize="9"
                                       IsHitTestVisible="False"></Label>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </ScrollViewer>


            <!-- _____________________Container for the bottom buttons_____________________ -->
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="130"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal"
                        Grid.Column="1"
                        Margin="5">

                <!-- _____________________Previous Music Button_____________________ -->
                <Border Width="30"
                        Height="30"
                        BorderBrush="Transparent"
                        Grid.Column="1"
                        CornerRadius="30"
                        Background="{DynamicResource n1_3}"
                        Margin="0,0,10,0">
                    <Button x:Name="Previous_BTN"
                            Width="10"
                            Height="10"
                            Style="{DynamicResource TransparentButtonStyle}"
                            Background="{DynamicResource next_Brush}"
                            RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="180"/>
                            </TransformGroup>
                        </Button.RenderTransform>
                    </Button>
                </Border>

                <!-- _____________________Pause/Play Music Button_____________________ -->
                <Border Width="30"
                        Height="30"
                        BorderBrush="Transparent"
                        Grid.Column="1"
                        CornerRadius="30"
                        Background="{DynamicResource n1_3}"
                        Margin="0,0,0,0">
                    <Button x:Name="PlayPause_BTN"
                            Width="15"
                            Height="15"
                            Style="{DynamicResource TransparentButtonStyle}"
                            Background="{DynamicResource play_Brush}"
                            Margin="3,0,0,0">
                    </Button>
                </Border>

                <!-- _____________________Next Music Button_____________________ -->
                <Border Width="30"
                        Height="30"
                        BorderBrush="Transparent"
                        Grid.Column="1"
                        CornerRadius="30"
                        Background="{DynamicResource n1_3}"
                        Margin="10,0,0,0">
                    <Button x:Name="Next_BTN"
                        Width="10"
                        Height="10"
                        Style="{DynamicResource TransparentButtonStyle}"
                        Background="{DynamicResource next_Brush}">
                    </Button>
                </Border>
            </StackPanel>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Button Grid.Column="0"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Background="Transparent"
                        Command="{Binding ViewChanger}"
                        CommandParameter="OpenCurrentMusicPlay"
                        BorderThickness="0"
                        Style="{DynamicResource TransparentButtonStyle}"></Button>

                <TextBlock Grid.Row="0"
                           Name="MusicTitle_TXT"
                           Foreground="{DynamicResource n1_4}"
                           FontSize="15"
                           Margin="10,0,10,10"
                           IsHitTestVisible="False"></TextBlock>
                <TextBlock Grid.Row="1"
                           Name="MusicArtist_TXT"
                           Foreground="{DynamicResource n1_4}"
                           FontSize="15"
                           Margin="10,0,10,10"
                           IsHitTestVisible="False"></TextBlock>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
